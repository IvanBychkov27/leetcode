/* Алгоритм решения задачи Ханойские башни
	Есть три столбца (i, k, tmp). На первом стоит пирамидка из n элементов.
Необходимо переставить все элементы на столбец k, при этом
нельзя брать более одного элемента и нельзя элемент с большим диаметром класть на меньший
*/
package main

import "fmt"

func main() {
	hanoi(1, 2, 4)
}

/* Решение Ханойской башни
i - с какого столбца
k - на какой столбец
n - кол-во элементов которые нужно переложить
*/
func hanoi(i, k, n int) {
	if n == 1 {
		fmt.Printf("move disk 1 from %d to %d\n", i, k)
	} else {
		tmp := 6 - i - k // инвариантная операция (в сумме номера столбцов дают число 6)
		hanoi(i, tmp, n-1)
		fmt.Printf("move disk %d from %d to %d\n", n, i, k)
		hanoi(tmp, k, n-1)
	}
}

/*
Рекурсия. Прямой и обратный ход
Факториал
Алгоритм Евклида
Быстрое возведение в степень
Вычисление чисел Фибоначчи
Ханойские башни
Рекурсивная генерация всех чисел длины М
Перебор с возвратом: метод ветвей и границ
*/
