/*  https://leetcode.com/problems/plus-one/
66. Plus One
Вам дается большое целое число, представленное в виде целочисленного массива цифр, где каждая цифра [i] является i-й цифрой целого числа.
Цифры упорядочены от наиболее значимых к наименее значимым в порядке слева направо. Большое целое число не содержит никаких начальных 0.
Увеличьте большое целое число на единицу и верните результирующий массив цифр.

Пример 1:
Ввод: digits = [1,2,3]
Результат: [1,2,4]
Пояснение: Массив представляет собой целое число 123.
Увеличение на единицу дает 123 + 1 = 124.
Таким образом, результат должен быть [1,2,4].

Пример 2:
Ввод: digits = [9]
Выход: [1,0]
Пояснение: Массив представляет собой целое число 9.
Увеличение на единицу дает 9 + 1 = 10.
Таким образом, результат должен быть [1,0].

Выполнено:
Время выполнения: 0 мс, быстрее, чем 100,00% онлайн-заявок для Plus One.
Использование памяти: 2,1 МБ, менее 65,00% отправленных онлайн-заявок для Plus One.

*/
package main

import "fmt"

func main() {
	//digits := []int{1, 2, 3}
	//digits := []int{9}
	digits := []int{9, 9, 9, 9}
	fmt.Println("digits =", digits)
	res := plusOne(digits)
	fmt.Println("res    =", res)
}

func plusOne(digits []int) []int {
	const base = 10
	n := len(digits)
	res := []int{0}
	res = append(res, digits...)
	res[n]++

	var d int
	for i := n; i > -1; i-- {
		d += res[i]
		res[i] = d % base
		d /= base
		if d == 0 {
			break
		}
	}

	if res[0] == 0 {
		res = res[1:]
	}

	return res
}
